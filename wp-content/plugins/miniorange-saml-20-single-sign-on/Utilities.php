<?php


include_once "\x78\x6d\x6c\x73\145\143\x6c\151\142\163\x2e\x70\x68\x70";
use RobRichards\XMLSecLibs\XMLSecurityKey;
use RobRichards\XMLSecLibs\XMLSecurityDSig;
use RobRichards\XMLSecLibs\XMLSecEnc;
class SAMLSPUtilities
{
    public static function generateID()
    {
        return "\x5f" . self::stringToHex(self::generateRandomBytes(21));
    }
    public static function stringToHex($Ey)
    {
        $sG = '';
        $y_ = 0;
        MKW:
        if (!($y_ < strlen($Ey))) {
            goto G8E;
        }
        $sG .= sprintf("\x25\x30\62\170", ord($Ey[$y_]));
        dZ_:
        $y_++;
        goto MKW;
        G8E:
        return $sG;
    }
    public static function generateRandomBytes($T7, $HY = TRUE)
    {
        return openssl_random_pseudo_bytes($T7);
    }
    public static function createAuthnRequest($hC, $JV, $GH, $z8 = "\x66\x61\154\163\145", $mj = "\110\x74\x74\160\x52\145\144\151\162\x65\143\164", $AS = '')
    {
        $AS = "\165\162\x6e\x3a\157\141\163\151\163\72\x6e\141\155\x65\x73\72\x74\143\72\x53\x41\115\114\x3a" . $AS;
        $s4 = "\x3c\x3f\x78\x6d\154\40\x76\x65\162\163\x69\x6f\x6e\75\x22\61\x2e\60\x22\x20\145\x6e\143\157\144\x69\156\147\75\x22\125\x54\x46\x2d\x38\x22\x3f\x3e" . "\74\x73\x61\x6d\x6c\x70\72\101\x75\164\x68\x6e\122\145\x71\x75\x65\163\x74\40\170\155\154\x6e\163\x3a\x73\x61\155\154\x70\x3d\42\x75\162\x6e\72\x6f\x61\x73\x69\x73\72\156\x61\155\x65\x73\x3a\164\x63\x3a\x53\x41\x4d\114\72\62\x2e\x30\x3a\x70\162\x6f\x74\x6f\x63\x6f\x6c\42\40\x78\x6d\154\x6e\x73\x3d\42\x75\162\156\72\157\141\x73\x69\x73\x3a\156\x61\155\145\x73\x3a\x74\143\72\x53\101\115\x4c\x3a\62\x2e\x30\72\x61\x73\x73\145\162\x74\x69\x6f\156\x22\x20\x49\104\x3d\42" . self::generateID() . "\42\40\126\x65\162\x73\151\157\x6e\75\x22\x32\x2e\x30\x22\40\x49\163\x73\x75\x65\111\x6e\163\164\x61\x6e\164\75\42" . self::generateTimestamp() . "\x22";
        if (!($z8 == "\x74\162\165\x65")) {
            goto glN;
        }
        $s4 .= "\x20\106\157\162\143\x65\101\x75\164\x68\156\x3d\x22\x74\x72\x75\x65\42";
        glN:
        $s4 .= "\x20\x50\x72\x6f\x74\157\x63\x6f\x6c\102\151\x6e\x64\x69\156\147\x3d\42\x75\x72\x6e\x3a\x6f\x61\x73\x69\x73\72\x6e\141\x6d\145\163\72\x74\x63\72\x53\x41\x4d\114\x3a\62\56\60\72\x62\151\156\x64\x69\x6e\x67\x73\72\110\124\x54\x50\55\120\117\x53\124\x22\40\101\x73\x73\x65\x72\x74\151\x6f\156\x43\x6f\x6e\163\165\155\145\162\x53\145\x72\x76\x69\x63\x65\x55\122\x4c\75\42" . $hC . "\42\40\x44\145\163\x74\x69\x6e\x61\164\151\x6f\156\75\x22" . htmlspecialchars($GH) . "\x22\x3e\x3c\163\x61\155\154\x3a\x49\x73\x73\165\145\x72\40\x78\x6d\x6c\x6e\163\x3a\x73\x61\155\x6c\x3d\42\165\162\x6e\72\157\141\163\151\x73\x3a\x6e\x61\155\145\x73\x3a\x74\x63\72\123\101\x4d\x4c\72\62\56\x30\x3a\141\x73\163\145\x72\164\151\157\156\x22\x3e" . $JV . "\x3c\57\x73\x61\x6d\154\x3a\111\x73\x73\x75\x65\x72\76\x3c\163\141\155\154\x70\x3a\x4e\x61\155\145\x49\x44\120\x6f\154\151\143\171\40\x41\154\x6c\x6f\167\103\x72\x65\x61\164\x65\75\x22\x74\x72\165\x65\42\x20\106\157\x72\155\141\164\x3d\x22" . $AS . "\x22\15\12\40\40\x20\40\x20\40\x20\40\40\x20\x20\40\x20\x20\x20\x20\40\40\40\40\x20\x20\x20\40\57\x3e\x3c\x2f\x73\x61\x6d\x6c\x70\72\x41\x75\x74\150\x6e\x52\145\x71\x75\145\163\164\x3e";
        if (empty($mj) || $mj == "\110\164\164\160\x52\x65\x64\151\x72\145\x63\164") {
            goto GRK;
        }
        $i2 = gzdeflate($s4);
        $VR = base64_encode($i2);
        update_option("\155\157\137\x73\x61\155\x6c\137\x72\x65\x71\x75\x65\x73\x74", $VR);
        goto j4C;
        GRK:
        $i2 = gzdeflate($s4);
        $VR = base64_encode($i2);
        update_option("\x6d\157\x5f\x73\x61\155\154\x5f\162\x65\x71\x75\x65\x73\164", $VR);
        $nI = urlencode($VR);
        $s4 = $nI;
        j4C:
        return $s4;
    }
    public static function createLogoutRequest($Jw, $JV, $GH, $rB = '', $am = "\110\164\x74\x70\122\x65\144\151\162\x65\143\164")
    {
        $s4 = "\x3c\77\x78\155\154\40\x76\x65\162\163\x69\x6f\156\75\x22\61\56\x30\x22\40\x65\156\143\x6f\144\151\156\x67\75\x22\x55\124\x46\55\x38\42\77\76" . "\x3c\x73\x61\x6d\154\x70\72\114\x6f\x67\157\165\164\122\145\161\165\145\x73\x74\40\x78\155\154\x6e\163\72\x73\141\x6d\x6c\160\75\x22\165\162\x6e\x3a\x6f\141\x73\x69\x73\72\x6e\x61\x6d\145\163\x3a\x74\x63\x3a\x53\x41\115\x4c\72\62\x2e\x30\72\x70\x72\x6f\x74\157\143\x6f\x6c\42\x20\x78\x6d\154\156\163\72\163\x61\x6d\154\75\x22\165\x72\x6e\72\157\141\x73\x69\163\x3a\x6e\x61\x6d\145\163\x3a\164\143\x3a\123\x41\x4d\x4c\x3a\x32\x2e\60\72\141\163\163\x65\162\164\151\x6f\156\x22\40\x49\x44\x3d\42" . self::generateID() . "\x22\40\111\x73\x73\165\x65\111\x6e\163\x74\x61\x6e\164\x3d\x22" . self::generateTimestamp() . "\42\x20\x56\145\162\x73\151\157\156\x3d\42\62\56\x30\42\x20\104\145\163\x74\x69\x6e\141\164\151\157\156\75\x22" . htmlspecialchars($GH) . "\42\x3e\xd\xa\x9\11\x9\x9\x9\x9\x3c\163\141\155\154\72\x49\x73\163\165\145\162\40\x78\x6d\154\156\163\x3a\163\x61\x6d\x6c\75\x22\165\162\x6e\72\157\x61\x73\x69\x73\x3a\156\141\x6d\145\163\x3a\x74\x63\72\x53\101\115\x4c\x3a\x32\x2e\x30\x3a\141\163\163\x65\162\x74\151\157\156\42\x3e" . $JV . "\74\x2f\163\x61\x6d\154\x3a\x49\163\x73\165\145\x72\x3e\15\12\x9\x9\x9\x9\x9\11\74\163\x61\155\x6c\72\116\141\155\x65\x49\104\40\x78\155\154\156\x73\72\163\x61\x6d\154\75\x22\165\162\x6e\72\157\141\163\x69\163\x3a\156\x61\155\x65\163\x3a\x74\x63\x3a\123\101\x4d\x4c\72\x32\x2e\x30\x3a\141\163\163\x65\x72\x74\x69\x6f\156\42\76" . $Jw[0] . "\x3c\57\x73\x61\155\154\72\116\x61\155\x65\x49\104\76";
        if (empty($rB)) {
            goto d95;
        }
        $s4 .= "\74\163\141\155\x6c\160\x3a\123\x65\163\163\151\x6f\156\x49\156\144\x65\170\x3e" . $rB[0] . "\74\57\x73\141\155\x6c\160\x3a\x53\x65\163\163\151\157\x6e\111\156\x64\145\170\x3e";
        d95:
        $s4 .= "\x3c\57\x73\141\x6d\x6c\x70\72\114\157\x67\157\x75\164\x52\x65\x71\165\x65\x73\164\76";
        if (!(empty($am) || $am == "\x48\x74\x74\x70\122\145\144\x69\162\x65\143\164")) {
            goto mv3;
        }
        $i2 = gzdeflate($s4);
        $VR = base64_encode($i2);
        $nI = urlencode($VR);
        $s4 = $nI;
        mv3:
        return $s4;
    }
    public static function createLogoutResponse($xl, $JV, $GH, $am = "\x48\x74\164\160\x52\145\144\x69\162\145\x63\x74")
    {
        $s4 = "\74\x3f\x78\x6d\x6c\x20\x76\x65\162\x73\151\157\x6e\x3d\42\61\56\60\42\x20\x65\156\143\x6f\144\151\156\147\x3d\x22\125\x54\x46\55\70\42\x3f\x3e" . "\74\x73\141\155\154\x70\x3a\x4c\157\x67\157\165\164\x52\x65\163\160\x6f\x6e\163\x65\40\170\155\x6c\156\163\x3a\x73\141\155\154\160\75\x22\x75\162\156\x3a\x6f\141\x73\151\163\x3a\156\x61\155\145\x73\x3a\164\x63\72\123\x41\x4d\x4c\x3a\x32\56\60\72\x70\x72\157\x74\157\143\157\154\x22\40\170\155\154\156\163\72\163\141\155\154\75\42\165\162\x6e\x3a\x6f\141\163\x69\x73\72\156\141\x6d\x65\x73\x3a\164\x63\x3a\123\x41\115\114\72\62\x2e\x30\72\141\x73\x73\x65\x72\x74\x69\x6f\x6e\x22\40" . "\x49\x44\x3d\x22" . self::generateID() . "\42\40" . "\x56\145\162\163\151\157\x6e\75\42\62\56\60\x22\x20\x49\x73\x73\165\145\111\156\163\x74\x61\156\x74\x3d\42" . self::generateTimestamp() . "\x22\x20" . "\x44\x65\x73\164\x69\x6e\x61\164\151\x6f\156\x3d\x22" . $GH . "\x22\40" . "\x49\x6e\122\145\163\160\x6f\x6e\x73\x65\x54\x6f\75\42" . $xl . "\42\76" . "\x3c\x73\141\x6d\x6c\72\x49\163\163\x75\x65\162\x20\170\x6d\154\156\x73\x3a\x73\x61\155\154\75\42\165\162\x6e\72\157\x61\x73\151\163\72\156\x61\155\x65\x73\72\164\143\x3a\x53\101\115\114\x3a\x32\56\x30\x3a\x61\163\163\x65\x72\x74\151\157\x6e\42\76" . $JV . "\x3c\57\163\x61\155\154\x3a\111\163\x73\x75\x65\162\76" . "\x3c\163\141\x6d\x6c\160\72\123\164\x61\164\165\x73\76\x3c\163\x61\155\x6c\x70\x3a\123\x74\x61\x74\x75\x73\103\x6f\x64\145\x20\x56\141\154\x75\145\x3d\42\165\x72\156\x3a\157\x61\x73\x69\163\x3a\156\141\155\x65\163\72\x74\x63\72\123\x41\115\114\x3a\62\56\60\x3a\x73\x74\141\x74\165\x73\72\x53\x75\143\x63\145\x73\163\42\x2f\76\x3c\57\163\141\x6d\x6c\160\x3a\123\164\x61\x74\x75\x73\x3e\x3c\x2f\x73\141\x6d\154\x70\72\x4c\157\x67\157\165\164\122\x65\x73\160\157\156\163\x65\76";
        if (!(empty($am) || $am == "\110\x74\x74\160\x52\x65\144\151\x72\145\143\x74")) {
            goto n7p;
        }
        $i2 = gzdeflate($s4);
        $VR = base64_encode($i2);
        $nI = urlencode($VR);
        $s4 = $nI;
        n7p:
        return $s4;
    }
    public static function generateTimestamp($yg = NULL)
    {
        if (!($yg === NULL)) {
            goto ewP;
        }
        $yg = time();
        ewP:
        return gmdate("\131\x2d\155\x2d\144\134\x54\110\x3a\x69\72\x73\x5c\132", $yg);
    }
    public static function xpQuery(DOMNode $y5, $k0)
    {
        static $bb = NULL;
        if ($y5 instanceof DOMDocument) {
            goto dyR;
        }
        $ra = $y5->ownerDocument;
        goto wWD;
        dyR:
        $ra = $y5;
        wWD:
        if (!($bb === NULL || !$bb->document->isSameNode($ra))) {
            goto Lbl;
        }
        $bb = new DOMXPath($ra);
        $bb->registerNamespace("\x73\157\141\160\x2d\x65\156\166", "\150\x74\x74\160\x3a\x2f\57\x73\143\x68\145\x6d\x61\x73\56\170\x6d\154\x73\157\141\x70\56\157\162\x67\57\x73\x6f\x61\160\57\145\156\x76\145\154\157\x70\x65\x2f");
        $bb->registerNamespace("\x73\x61\155\154\137\160\162\x6f\164\157\x63\157\154", "\x75\x72\x6e\x3a\x6f\141\163\x69\x73\72\x6e\141\x6d\145\163\72\x74\143\x3a\x53\101\x4d\x4c\x3a\x32\x2e\x30\72\x70\162\x6f\x74\x6f\143\x6f\x6c");
        $bb->registerNamespace("\163\x61\x6d\x6c\x5f\x61\163\x73\145\162\x74\151\157\x6e", "\165\x72\156\72\x6f\x61\x73\x69\x73\x3a\156\141\155\x65\x73\72\164\x63\x3a\x53\101\x4d\x4c\72\62\x2e\x30\x3a\141\163\x73\x65\162\x74\x69\x6f\x6e");
        $bb->registerNamespace("\163\141\155\154\x5f\155\145\164\141\144\141\x74\141", "\x75\x72\x6e\x3a\157\x61\163\x69\x73\72\x6e\141\x6d\145\163\x3a\x74\x63\x3a\x53\x41\115\x4c\72\x32\56\60\72\x6d\145\164\x61\x64\x61\x74\141");
        $bb->registerNamespace("\144\x73", "\x68\164\164\160\72\x2f\57\x77\167\167\x2e\x77\x33\x2e\x6f\162\147\x2f\x32\60\60\60\57\60\71\x2f\170\155\154\x64\163\151\x67\43");
        $bb->registerNamespace("\170\x65\x6e\143", "\150\x74\x74\x70\x3a\57\x2f\167\167\167\x2e\167\x33\56\x6f\x72\147\x2f\x32\60\x30\61\57\x30\64\x2f\x78\155\x6c\x65\156\143\x23");
        Lbl:
        $g5 = $bb->query($k0, $y5);
        $sG = array();
        $y_ = 0;
        OxQ:
        if (!($y_ < $g5->length)) {
            goto IUJ;
        }
        $sG[$y_] = $g5->item($y_);
        cpo:
        $y_++;
        goto OxQ;
        IUJ:
        return $sG;
    }
    public static function parseNameId(DOMElement $tW)
    {
        $sG = array("\126\x61\x6c\165\145" => trim($tW->textContent));
        foreach (array("\116\141\x6d\145\x51\x75\x61\154\x69\x66\x69\x65\x72", "\x53\120\x4e\x61\x6d\x65\121\165\x61\x6c\x69\146\151\145\162", "\x46\x6f\162\155\141\164") as $TU) {
            if (!$tW->hasAttribute($TU)) {
                goto sSU;
            }
            $sG[$TU] = $tW->getAttribute($TU);
            sSU:
            nhy:
        }
        HuW:
        return $sG;
    }
    public static function xsDateTimeToTimestamp($rK)
    {
        $b6 = array();
        $T2 = "\57\136\50\x5c\x64\x5c\144\x5c\144\134\144\x29\55\x28\134\144\134\144\51\x2d\x28\x5c\144\x5c\144\x29\x54\50\x5c\x64\134\x64\x29\x3a\x28\x5c\x64\134\144\x29\72\50\x5c\144\134\x64\x29\x28\x3f\x3a\x5c\56\x5c\144\x2b\x29\77\132\44\57\x44";
        if (!(preg_match($T2, $rK, $b6) == 0)) {
            goto IKL;
        }
        echo sprintf("\x6e\x76\x61\154\151\x64\40\123\x41\115\x4c\62\x20\164\151\155\145\163\x74\x61\x6d\160\x20\x70\141\163\163\145\144\40\x74\157\40\170\x73\104\141\x74\x65\x54\x69\x6d\x65\124\x6f\124\151\155\x65\x73\164\x61\155\x70\72\x20" . $rK);
        exit;
        IKL:
        $pO = intval($b6[1]);
        $qY = intval($b6[2]);
        $LY = intval($b6[3]);
        $Cm = intval($b6[4]);
        $DF = intval($b6[5]);
        $Al = intval($b6[6]);
        $lb = gmmktime($Cm, $DF, $Al, $qY, $LY, $pO);
        return $lb;
    }
    public static function extractStrings(DOMElement $hQ, $FW, $d3)
    {
        $sG = array();
        $y5 = $hQ->firstChild;
        lym:
        if (!($y5 !== NULL)) {
            goto kO0;
        }
        if (!($y5->namespaceURI !== $FW || $y5->localName !== $d3)) {
            goto zz9;
        }
        goto Cmj;
        zz9:
        $sG[] = trim($y5->textContent);
        Cmj:
        $y5 = $y5->nextSibling;
        goto lym;
        kO0:
        return $sG;
    }
    public static function validateElement(DOMElement $Tk)
    {
        $Ak = new XMLSecurityDSig();
        $Ak->idKeys[] = "\111\104";
        $e8 = self::xpQuery($Tk, "\56\57\x64\x73\72\123\151\x67\156\141\164\x75\x72\x65");
        if (count($e8) === 0) {
            goto rvM;
        }
        if (count($e8) > 1) {
            goto iTD;
        }
        goto tJu;
        rvM:
        return FALSE;
        goto tJu;
        iTD:
        echo sprintf("\x58\115\x4c\123\145\x63\72\x20\x6d\157\x72\145\x20\164\150\141\156\40\x6f\156\x65\40\x73\151\147\x6e\x61\x74\165\x72\x65\x20\x65\x6c\145\x6d\145\156\x74\x20\x69\156\40\x72\157\x6f\164\x2e");
        exit;
        tJu:
        $e8 = $e8[0];
        $Ak->sigNode = $e8;
        $Ak->canonicalizeSignedInfo();
        if ($Ak->validateReference()) {
            goto N8C;
        }
        echo sprintf("\130\115\114\x73\145\143\72\40\144\x69\x67\x65\x73\x74\40\166\141\x6c\151\x64\x61\x74\x69\157\156\x20\146\x61\151\x6c\x65\144");
        exit;
        N8C:
        $S7 = FALSE;
        foreach ($Ak->getValidatedNodes() as $Eh) {
            if ($Eh->isSameNode($Tk)) {
                goto JEZ;
            }
            if ($Tk->parentNode instanceof DOMDocument && $Eh->isSameNode($Tk->ownerDocument)) {
                goto aPH;
            }
            goto gz0;
            JEZ:
            $S7 = TRUE;
            goto zku;
            goto gz0;
            aPH:
            $S7 = TRUE;
            goto zku;
            gz0:
            DNs:
        }
        zku:
        if ($S7) {
            goto Ml5;
        }
        echo sprintf("\130\115\114\123\145\x63\x3a\x20\124\x68\x65\x20\x72\157\x6f\x74\40\145\154\x65\x6d\145\x6e\164\x20\x69\163\x20\156\157\164\40\163\x69\x67\x6e\145\x64\56");
        exit;
        Ml5:
        $Pa = array();
        foreach (self::xpQuery($e8, "\56\x2f\144\163\72\113\145\171\111\x6e\146\x6f\57\144\x73\72\130\65\60\x39\x44\x61\x74\x61\57\144\x73\72\x58\x35\60\x39\103\x65\x72\x74\151\146\151\143\141\164\x65") as $DP) {
            $Vu = trim($DP->textContent);
            $Vu = str_replace(array("\15", "\12", "\x9", "\x20"), '', $Vu);
            $Pa[] = $Vu;
            IM1:
        }
        JPv:
        $sG = array("\123\151\x67\156\x61\164\165\162\145" => $Ak, "\x43\145\x72\164\151\146\x69\x63\141\x74\x65\163" => $Pa);
        return $sG;
    }
    public static function validateSignature(array $Ef, XMLSecurityKey $y9)
    {
        $Ak = $Ef["\x53\151\x67\156\141\164\165\x72\x65"];
        $CA = self::xpQuery($Ak->sigNode, "\56\57\x64\163\x3a\x53\x69\x67\x6e\x65\x64\x49\156\x66\x6f\57\144\163\x3a\x53\x69\x67\156\x61\164\165\x72\145\115\145\x74\x68\x6f\144");
        if (!empty($CA)) {
            goto til;
        }
        echo sprintf("\x4d\151\x73\163\x69\x6e\x67\x20\x53\x69\147\156\x61\164\165\162\x65\115\145\x74\x68\x6f\144\x20\145\x6c\x65\x6d\x65\156\x74");
        exit;
        til:
        $CA = $CA[0];
        if ($CA->hasAttribute("\101\x6c\147\x6f\x72\x69\x74\150\155")) {
            goto dkI;
        }
        echo sprintf("\x4d\x69\x73\x73\151\156\147\40\101\x6c\147\157\x72\x69\164\150\155\55\x61\x74\x74\162\151\142\x75\164\145\40\157\156\x20\x53\151\x67\156\141\x74\x75\162\x65\115\145\x74\x68\157\144\x20\x65\x6c\x65\155\x65\156\x74\56");
        exit;
        dkI:
        $bz = $CA->getAttribute("\101\x6c\x67\x6f\x72\151\164\x68\x6d");
        if (!($y9->type === XMLSecurityKey::RSA_SHA1 && $bz !== $y9->type)) {
            goto D0x;
        }
        $y9 = self::castKey($y9, $bz);
        D0x:
        if ($Ak->verify($y9)) {
            goto ppy;
        }
        echo sprintf("\125\x6e\141\x62\x6c\145\40\x74\157\x20\166\141\x6c\151\x64\141\164\145\40\x53\151\147\x6e\x61\x74\165\x72\145");
        exit;
        ppy:
    }
    public static function castKey(XMLSecurityKey $y9, $q1, $km = "\160\x75\142\154\151\143")
    {
        if (!($y9->type === $q1)) {
            goto o67;
        }
        return $y9;
        o67:
        $vC = openssl_pkey_get_details($y9->key);
        if (!($vC === FALSE)) {
            goto dKG;
        }
        echo sprintf("\x55\x6e\141\142\154\x65\x20\x74\157\x20\147\145\164\40\x6b\x65\x79\40\x64\145\x74\x61\151\154\x73\40\x66\162\x6f\155\x20\x58\115\x4c\x53\145\x63\165\x72\x69\x74\x79\113\145\171\x2e");
        exit;
        dKG:
        if (isset($vC["\153\x65\x79"])) {
            goto VM5;
        }
        echo sprintf("\115\151\163\x73\x69\x6e\x67\x20\153\145\x79\x20\151\x6e\x20\160\165\142\154\x69\143\x20\x6b\x65\171\x20\144\x65\x74\x61\x69\154\163\x2e");
        exit;
        VM5:
        $dL = new XMLSecurityKey($q1, array("\x74\171\x70\145" => $km));
        $dL->loadKey($vC["\x6b\145\x79"]);
        return $dL;
    }
    public static function processResponse($f1, $W2, $Hs, SAML2SPResponse $Jq, $NX, $sl)
    {
        $rS = current($Jq->getAssertions());
        $O1 = $rS->getNotBefore();
        if (!($O1 !== NULL && $O1 > time() + 60)) {
            goto pE5;
        }
        wp_die("\122\145\x63\145\151\x76\145\144\x20\141\156\40\x61\163\163\145\x72\164\x69\157\156\40\164\x68\141\x74\x20\x69\163\40\166\x61\x6c\x69\144\40\151\156\x20\x74\150\x65\x20\x66\x75\164\165\x72\x65\x2e\40\x43\150\x65\x63\x6b\40\143\x6c\x6f\x63\x6b\x20\x73\x79\156\x63\x68\162\x6f\156\x69\x7a\141\x74\x69\157\x6e\x20\x6f\156\x20\x49\x64\x50\x20\x61\x6e\144\40\123\120\x2e");
        pE5:
        $fg = $rS->getNotOnOrAfter();
        if (!($fg !== NULL && $fg <= time() - 60)) {
            goto dYs;
        }
        wp_die("\x52\x65\143\145\x69\x76\145\x64\40\x61\156\x20\x61\163\163\145\162\164\x69\157\x6e\x20\164\x68\x61\164\40\x68\141\x73\40\145\x78\160\151\x72\145\x64\56\x20\x43\150\145\143\x6b\40\143\x6c\x6f\x63\x6b\x20\x73\171\156\x63\150\162\157\156\x69\x7a\x61\164\x69\x6f\x6e\x20\x6f\156\40\x49\x64\x50\x20\x61\x6e\x64\40\123\x50\x2e");
        dYs:
        $i5 = $rS->getSessionNotOnOrAfter();
        if (!($i5 !== NULL && $i5 <= time() - 60)) {
            goto I6X;
        }
        wp_die("\122\x65\x63\x65\x69\x76\145\x64\40\x61\x6e\40\141\x73\x73\x65\x72\164\x69\x6f\x6e\x20\x77\151\x74\x68\x20\x61\x20\x73\145\x73\x73\x69\x6f\156\40\164\150\x61\164\40\150\x61\163\x20\145\170\x70\151\x72\x65\x64\56\x20\103\x68\x65\143\153\x20\x63\154\x6f\x63\153\x20\163\171\x6e\143\x68\162\157\156\151\172\141\164\x69\157\156\40\157\156\40\x49\144\x50\40\141\156\x64\40\x53\x50\x2e");
        I6X:
        $Qs = $Jq->getDestination();
        if (!(substr($Qs, -1) == "\57")) {
            goto sQ7;
        }
        $Qs = substr($Qs, 0, -1);
        sQ7:
        if (!(substr($f1, -1) == "\x2f")) {
            goto Fkk;
        }
        $f1 = substr($f1, 0, -1);
        Fkk:
        if (!($Qs !== NULL && $Qs !== $f1)) {
            goto dhA;
        }
        echo "\x44\145\163\x74\x69\156\141\x74\151\157\156\40\151\x6e\x20\162\145\x73\160\x6f\x6e\x73\145\40\144\157\x65\x73\x6e\47\164\x20\155\x61\x74\143\x68\x20\164\150\145\40\143\x75\162\162\145\156\164\40\125\x52\114\56\40\x44\x65\163\x74\x69\x6e\141\x74\151\x6f\156\x20\151\163\40\42" . htmlspecialchars($Qs) . "\x22\54\x20\143\165\x72\162\145\156\x74\40\x55\122\x4c\40\151\x73\40\42" . htmlspecialchars($f1) . "\42\x2e";
        exit;
        dhA:
        $Ob = self::checkSign($W2, $Hs, $NX, $sl);
        return $Ob;
    }
    public static function checkSign($W2, $Hs, $NX, $sl)
    {
        $Pa = $Hs["\103\145\162\164\151\146\151\x63\x61\164\x65\x73"];
        if (count($Pa) === 0) {
            goto Rje;
        }
        $Nt = array();
        $Nt[] = $W2;
        $T6 = self::findCertificate($Nt, $Pa, $sl);
        if (!($T6 == false)) {
            goto gQx;
        }
        return false;
        gQx:
        goto cLB;
        Rje:
        $FH = maybe_unserialize(get_option("\163\x61\x6d\x6c\137\x78\x35\x30\x39\x5f\x63\x65\162\164\151\146\151\143\x61\x74\x65"));
        $T6 = $FH[$NX];
        cLB:
        $RO = NULL;
        $y9 = new XMLSecurityKey(XMLSecurityKey::RSA_SHA1, array("\164\x79\x70\145" => "\x70\165\x62\154\151\143"));
        $y9->loadKey($T6);
        try {
            self::validateSignature($Hs, $y9);
            return TRUE;
        } catch (Exception $zg) {
            $RO = $zg;
        }
        if ($RO !== NULL) {
            goto rjS;
        }
        return FALSE;
        goto RUA;
        rjS:
        throw $RO;
        RUA:
    }
    public static function validateIssuerAndAudience($LA, $aX, $cL, $sl)
    {
        $JV = current($LA->getAssertions())->getIssuer();
        $rS = current($LA->getAssertions());
        $hh = $rS->getValidAudiences();
        if (strcmp($cL, $JV) === 0) {
            goto vlO;
        }
        if ($sl == "\x74\145\x73\164\126\141\154\x69\x64\141\x74\145" or $sl == "\164\145\163\164\116\145\167\103\145\162\x74\151\146\151\x63\141\164\x65") {
            goto fhv;
        }
        wp_die("\x57\x65\x20\x63\x6f\165\x6c\x64\40\156\157\x74\40\163\151\x67\x6e\40\171\x6f\x75\40\x69\156\56\x20\120\154\145\x61\163\x65\x20\143\x6f\156\164\x61\143\x74\x20\171\x6f\165\162\40\101\144\x6d\x69\x6e\151\163\x74\x72\141\164\x6f\x72", "\105\162\162\157\162\40\x3a\x49\163\163\165\x65\162\x20\143\x61\x6e\156\x6f\164\40\x62\145\x20\x76\x65\x72\x69\x66\151\145\144");
        goto zLK;
        fhv:
        ob_end_clean();
        $NH = mo_options_error_constants::Error_issuer_not_verfied;
        $g6 = mo_options_error_constants::Cause_issuer_not_verfied;
        echo "\x3c\144\151\166\x20\x73\x74\x79\x6c\x65\75\x22\146\157\x6e\x74\55\x66\141\x6d\x69\x6c\171\x3a\x43\141\x6c\151\142\x72\151\73\160\141\x64\x64\x69\156\147\72\60\x20\x33\45\x3b\x22\x3e";
        echo "\x3c\x64\151\166\x20\163\164\171\154\145\75\x22\143\x6f\x6c\x6f\x72\x3a\40\43\x61\71\x34\64\64\62\73\142\x61\x63\x6b\x67\162\x6f\x75\x6e\x64\x2d\143\x6f\x6c\x6f\162\72\40\x23\146\x32\144\145\144\x65\x3b\160\141\144\144\x69\156\147\x3a\x20\61\65\160\170\73\x6d\141\162\147\x69\156\x2d\x62\157\164\164\x6f\155\72\x20\62\60\x70\170\x3b\x74\x65\x78\x74\55\x61\154\151\147\156\x3a\143\x65\156\164\x65\162\x3b\x62\x6f\x72\144\x65\x72\72\61\x70\170\40\x73\x6f\154\151\144\x20\43\105\66\102\x33\x42\x32\73\146\157\x6e\164\x2d\x73\151\172\x65\72\x31\70\160\164\73\42\x3e\40\105\x52\x52\117\122\x3c\x2f\x64\151\x76\76\xd\xa\x9\x9\11\40\x3c\144\x69\166\x20\163\164\x79\x6c\145\75\x22\143\x6f\x6c\x6f\x72\x3a\x20\x23\x61\x39\x34\64\64\62\73\146\x6f\156\x74\55\163\151\x7a\x65\72\61\64\x70\164\73\40\155\141\162\x67\x69\156\x2d\x62\157\x74\x74\157\155\72\62\60\160\170\73\x22\x3e\x3c\x70\76\74\163\x74\x72\157\156\x67\x3e\105\162\162\x6f\x72\x3a\x20\x3c\57\163\x74\162\157\156\147\76\x49\163\x73\165\145\162\x20\x63\141\x6e\156\157\x74\x20\142\x65\40\x76\x65\x72\x69\146\x69\x65\144\x2e\74\x2f\160\76\xd\12\x9\x9\11\x20\x3c\x70\76\120\154\x65\x61\163\145\x20\143\x6f\156\164\x61\143\164\x20\171\x6f\x75\162\40\x61\x64\x6d\151\x6e\151\x73\x74\x72\x61\x74\157\x72\40\x61\x6e\x64\40\x72\145\160\x6f\x72\x74\x20\164\x68\145\40\x66\x6f\x6c\154\x6f\167\151\x6e\x67\40\x65\162\162\x6f\162\72\74\x2f\x70\x3e\15\xa\x9\11\x9\40\x3c\160\76\74\163\x74\162\x6f\x6e\147\x3e\x50\157\x73\163\x69\142\154\145\40\x43\x61\165\x73\145\x3a\x20\x3c\57\163\164\x72\157\156\147\x3e\111\144\120\40\x45\156\164\x69\x74\x79\x20\x49\104\x20\x63\157\156\146\151\147\165\x72\145\144\x20\x69\156\x20\164\x68\145\x20\x70\x6c\165\x67\151\156\x20\x69\x73\x20\x69\x6e\143\x6f\x72\x72\x65\143\x74\74\57\x70\76\15\12\11\x9\x9\40\74\x70\76\x3c\x73\164\x72\157\156\147\76\105\156\x74\151\x74\171\40\x49\104\x20\151\x6e\x20\x53\101\x4d\114\40\x52\145\163\160\x6f\x6e\x73\145\x3a\40\x3c\x2f\163\x74\162\157\x6e\147\x3e" . $JV . "\74\160\x3e\xd\12\11\x9\x9\40\x3c\x70\76\x3c\x73\x74\162\x6f\x6e\147\76\105\x6e\164\x69\x74\171\x20\111\104\40\143\157\156\146\x69\147\165\x72\x65\x64\40\x69\156\40\x74\150\x65\x20\x70\x6c\165\147\x69\156\72\x20\x3c\x2f\x73\164\x72\x6f\156\x67\76" . $cL . "\74\57\160\76\15\xa\11\11\x9\40\x3c\x70\76\x3c\163\x74\x72\157\x6e\147\76\123\157\x6c\x75\164\151\157\156\x3a\74\x2f\163\164\162\157\156\147\x3e\74\57\x70\x3e\xd\xa\11\x9\x9\11\74\157\154\76\xd\12\11\11\11\x9\11\x3c\154\151\x3e\103\x6f\160\171\40\x74\x68\x65\x20\x45\156\164\151\x74\x79\x20\x49\x44\40\157\x66\40\x53\101\x4d\114\x20\x52\145\x73\160\157\156\163\x65\40\x66\162\x6f\x6d\40\x61\x62\x6f\166\x65\40\x61\x6e\144\40\160\141\163\x74\145\x20\x69\164\40\x69\156\40\x45\x6e\x74\151\164\x79\x20\111\104\40\157\x72\x20\111\163\163\165\x65\162\40\146\x69\145\x6c\144\x20\x75\x6e\x64\x65\162\x20\x53\145\x72\166\x69\x63\145\x20\x50\x72\x6f\166\151\144\x65\x72\40\123\x65\x74\x75\x70\x20\164\x61\x62\56\x3c\x2f\154\x69\76\15\12\11\11\11\11\x3c\x2f\x6f\x6c\76\15\12\x9\x9\x9\40\x3c\x2f\144\151\x76\x3e\15\xa\11\x9\x9\x20\74\x64\151\166\40\x73\x74\x79\x6c\145\x3d\x22\x6d\x61\162\147\x69\156\x3a\x33\x25\73\144\151\163\160\x6c\141\171\x3a\142\154\157\143\153\x3b\164\x65\x78\164\55\x61\x6c\x69\x67\x6e\72\143\x65\x6e\164\145\162\73\42\x3e\15\xa\11\11\x9\x20\x3c\x64\151\166\40\163\164\x79\x6c\145\x3d\42\x6d\141\x72\x67\x69\156\x3a\x33\x25\x3b\x64\151\x73\x70\x6c\141\171\72\142\x6c\157\x63\153\x3b\164\145\x78\x74\x2d\x61\x6c\151\147\x6e\x3a\x63\145\x6e\164\145\162\x3b\42\76\74\151\x6e\x70\x75\x74\x20\x73\x74\171\154\x65\x3d\x22\x70\x61\144\x64\151\x6e\147\72\61\45\x3b\x77\x69\144\164\150\72\x31\60\60\x70\x78\73\x62\141\x63\x6b\x67\162\157\165\156\144\x3a\x20\43\60\x30\71\x31\103\x44\40\x6e\x6f\156\x65\x20\162\x65\x70\145\141\164\x20\x73\x63\162\x6f\154\154\40\60\x25\40\x30\45\73\143\x75\162\x73\x6f\162\72\x20\160\x6f\151\156\164\145\x72\x3b\x66\157\156\x74\x2d\x73\151\x7a\x65\x3a\x31\65\x70\170\x3b\142\x6f\x72\x64\145\162\x2d\x77\151\144\x74\150\x3a\40\x31\x70\170\73\142\157\162\x64\145\162\x2d\x73\164\x79\154\x65\72\40\x73\157\x6c\151\x64\73\142\157\162\144\x65\162\x2d\x72\141\x64\x69\x75\x73\x3a\40\x33\x70\170\73\x77\150\x69\x74\x65\x2d\163\160\141\x63\145\72\x20\156\x6f\167\162\x61\160\x3b\x62\x6f\x78\55\163\151\172\151\x6e\147\72\40\x62\157\162\144\x65\x72\x2d\142\157\x78\73\x62\157\162\144\145\162\x2d\x63\x6f\154\x6f\x72\72\40\43\60\x30\67\63\101\x41\x3b\142\157\x78\55\163\150\141\144\x6f\x77\x3a\x20\60\x70\170\x20\61\160\x78\40\x30\160\x78\40\x72\147\x62\x61\x28\x31\x32\60\x2c\40\x32\60\60\x2c\x20\62\x33\60\54\40\60\56\66\x29\40\151\x6e\163\x65\x74\73\143\x6f\x6c\x6f\x72\72\40\43\106\x46\106\73\42\164\x79\x70\x65\x3d\x22\x62\165\164\x74\x6f\156\x22\40\166\x61\x6c\165\x65\75\x22\104\157\x6e\145\x22\x20\x6f\156\x43\154\x69\x63\x6b\75\x22\x73\145\154\x66\x2e\x63\x6c\157\163\145\x28\51\73\x22\76\x3c\x2f\x64\151\x76\x3e";
        mo_saml_download_logs($NH, $g6);
        exit;
        zLK:
        goto XAm;
        vlO:
        if (empty($hh)) {
            goto NXk;
        }
        if (in_array($aX, $hh, TRUE)) {
            goto l7H;
        }
        if ($sl == "\x74\145\163\164\x56\x61\x6c\x69\144\x61\x74\x65" or $sl == "\x74\145\163\x74\116\x65\167\x43\145\x72\x74\151\x66\151\x63\x61\164\x65") {
            goto i45;
        }
        wp_die("\x57\x65\x20\143\x6f\165\154\x64\x20\156\157\x74\x20\163\x69\x67\x6e\40\x79\x6f\x75\40\151\156\56\x20\x50\154\145\141\163\x65\x20\x63\157\156\x74\141\x63\164\40\x79\x6f\165\x72\x20\x41\144\155\x69\156\151\x73\164\x72\141\x74\157\162", "\x45\x72\162\x6f\x72\x20\x3a\111\156\166\141\154\151\144\40\101\165\144\151\x65\x6e\143\x65\x20\x55\x52\111");
        goto GoN;
        i45:
        $NH = mo_options_error_constants::Error_invalid_audience;
        $g6 = mo_options_error_constants::Cause_invalid_audience;
        ob_end_clean();
        echo "\x3c\x64\151\166\40\x73\x74\171\x6c\145\75\42\146\x6f\x6e\x74\55\146\x61\x6d\x69\x6c\x79\72\103\x61\x6c\151\x62\162\x69\73\x70\x61\x64\144\x69\156\x67\x3a\x30\40\63\x25\x3b\x22\76";
        echo "\x3c\144\x69\166\x20\x73\164\171\154\x65\x3d\x22\143\x6f\x6c\x6f\x72\72\40\x23\x61\x39\x34\x34\x34\x32\73\142\141\143\x6b\147\162\157\165\x6e\144\x2d\143\157\x6c\157\162\x3a\x20\x23\x66\62\144\x65\x64\x65\73\160\x61\144\144\x69\156\x67\x3a\x20\x31\x35\x70\170\73\155\x61\x72\147\151\156\55\142\157\x74\x74\157\x6d\72\40\62\x30\160\x78\73\x74\145\170\164\x2d\x61\x6c\151\x67\156\72\143\x65\x6e\x74\145\x72\73\142\157\x72\144\x65\x72\x3a\61\x70\x78\40\163\157\154\x69\144\40\43\105\66\102\x33\102\62\x3b\x66\x6f\156\x74\x2d\163\151\172\145\72\x31\x38\x70\x74\x3b\x22\76\x20\x45\x52\122\x4f\x52\74\57\x64\151\x76\76\xd\12\40\40\40\x20\40\40\x20\x20\40\40\40\x20\x20\40\x20\40\x20\x20\40\40\x3c\144\151\166\x20\163\x74\171\154\x65\75\42\143\157\154\x6f\162\72\x20\x23\141\x39\x34\64\64\x32\x3b\x66\157\156\x74\x2d\x73\151\172\145\72\61\x34\x70\x74\x3b\40\x6d\141\162\147\x69\156\55\142\157\164\164\157\x6d\x3a\x32\60\160\170\x3b\42\x3e\74\160\76\74\x73\164\x72\157\x6e\147\x3e\x45\162\162\157\162\x3a\x20\74\57\x73\x74\162\x6f\156\x67\x3e\x49\156\166\141\x6c\151\144\40\x41\x75\144\x69\145\156\143\145\x20\125\122\x49\56\x3c\57\x70\76\15\xa\x20\40\x20\x20\40\x20\x20\40\40\40\x20\40\x20\40\40\40\x20\40\40\x20\x3c\x70\x3e\120\x6c\x65\x61\163\x65\40\x63\157\x6e\164\x61\x63\164\40\x79\x6f\x75\x72\x20\x61\x64\155\x69\x6e\x69\x73\x74\x72\141\x74\x6f\162\x20\x61\x6e\x64\x20\x72\145\160\157\162\164\40\x74\150\x65\40\x66\157\154\x6c\157\x77\151\156\147\40\x65\162\162\157\162\72\74\57\x70\x3e\15\xa\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\40\40\40\x20\40\40\x20\x20\74\160\x3e\x3c\163\x74\x72\157\x6e\147\x3e\120\157\x73\163\151\x62\154\x65\x20\103\x61\x75\x73\145\72\40\74\x2f\x73\x74\x72\157\x6e\147\76\124\x68\145\x20\166\141\154\165\x65\40\x6f\x66\x20\47\x41\165\144\151\145\x6e\143\x65\x20\x55\122\111\47\x20\x66\x69\x65\x6c\144\x20\157\156\40\111\x64\x65\x6e\x74\x69\164\171\x20\x50\x72\157\166\151\144\145\x72\47\x73\40\x73\151\x64\x65\x20\x69\163\x20\151\156\143\x6f\162\162\x65\143\x74\x3c\57\x70\76\xd\12\x20\x20\x20\40\x20\40\40\x20\x20\x20\40\40\40\40\x20\40\40\40\40\40\74\160\x3e\105\x78\160\145\143\x74\145\x64\40\157\x6e\x65\x20\157\146\40\164\x68\x65\x20\101\x75\x64\x69\145\156\x63\145\163\40\164\x6f\x20\142\145\72\40" . $aX . "\x3c\160\x3e\xd\12\11\x9\x9\11\x9\x3c\x70\76\74\x73\x74\x72\157\156\147\76\x53\x6f\x6c\165\x74\x69\x6f\x6e\72\74\57\163\164\162\157\x6e\147\76\74\57\160\x3e\xd\12\11\x9\x9\11\x9\74\x6f\154\76\xd\12\x9\11\x9\x9\11\11\x3c\154\x69\76\x43\157\x70\x79\x20\x74\150\145\40\x45\x78\160\x65\x63\x74\x65\x64\40\101\165\x64\x69\145\x6e\x63\x65\40\x55\x52\x49\x20\146\162\x6f\155\40\x61\142\x6f\x76\x65\40\x61\156\x64\40\160\141\163\x74\145\40\x69\x74\x20\x69\156\x20\x74\150\145\x20\x41\x75\144\151\x65\156\x63\x65\x20\x55\x52\x49\40\146\x69\x65\154\x64\40\x61\x74\40\x49\144\x65\156\x74\151\x74\x79\x20\120\x72\157\x76\x69\144\145\x72\40\x73\x69\144\145\x2e\74\57\x6c\151\76\xd\12\11\x9\11\x9\x9\x3c\57\157\154\76\xd\12\x9\11\11\x9\x9\74\57\x64\151\166\x3e\15\12\40\x20\x20\40\x20\x20\40\x20\x20\40\40\40\40\40\x20\x20\x20\x20\40\40\x3c\x64\151\166\x20\163\x74\171\x6c\145\75\42\155\141\162\147\151\156\x3a\63\45\x3b\x64\x69\163\160\154\141\x79\x3a\142\154\x6f\143\x6b\73\x74\x65\170\x74\x2d\141\154\x69\147\x6e\72\143\x65\156\164\x65\162\x3b\42\x3e\15\12\x20\40\40\x20\x20\x20\40\40\x20\x20\40\40\40\x20\x20\40\40\40\x20\x20\x3c\144\x69\166\x20\x73\x74\x79\x6c\x65\75\42\x6d\x61\162\x67\x69\156\x3a\x33\x25\73\x64\151\x73\160\x6c\141\171\x3a\x62\154\x6f\143\153\x3b\164\145\x78\x74\55\x61\154\x69\147\156\x3a\x63\145\156\x74\145\x72\73\x22\76\74\x69\x6e\x70\165\x74\40\x73\x74\171\154\x65\75\x22\160\x61\144\144\x69\156\147\72\61\x25\x3b\x77\x69\144\164\x68\72\61\60\60\160\x78\73\x62\x61\143\153\147\162\157\x75\156\x64\72\x20\43\x30\60\x39\61\x43\104\40\156\x6f\x6e\x65\40\x72\x65\x70\x65\x61\x74\x20\x73\x63\162\x6f\x6c\154\x20\60\x25\40\60\45\73\x63\x75\x72\163\x6f\x72\72\x20\160\x6f\151\156\x74\145\162\x3b\x66\157\156\164\55\x73\x69\172\x65\x3a\x31\x35\160\170\73\142\157\x72\x64\x65\x72\x2d\x77\x69\x64\x74\x68\72\40\x31\160\x78\x3b\x62\157\162\144\x65\162\x2d\163\x74\x79\154\145\x3a\40\x73\x6f\154\151\144\x3b\142\x6f\x72\x64\145\x72\x2d\x72\x61\144\151\165\x73\72\x20\63\160\170\73\167\x68\151\x74\145\x2d\163\160\x61\x63\145\72\x20\156\157\167\162\x61\160\x3b\142\157\x78\x2d\x73\x69\x7a\151\156\147\72\40\x62\x6f\x72\144\x65\x72\55\x62\x6f\x78\73\x62\157\x72\x64\145\x72\x2d\143\x6f\x6c\157\162\x3a\x20\x23\x30\60\67\x33\x41\101\x3b\142\157\x78\55\163\x68\141\144\157\167\72\x20\x30\160\x78\x20\x31\x70\170\40\60\x70\x78\x20\x72\147\142\141\50\61\x32\60\54\40\62\x30\x30\x2c\40\62\63\x30\54\40\60\x2e\66\x29\40\151\156\x73\x65\x74\x3b\x63\157\x6c\x6f\162\x3a\40\43\106\x46\x46\x3b\42\164\171\160\x65\75\x22\x62\165\164\x74\x6f\156\42\x20\x76\x61\154\x75\145\75\x22\104\157\156\x65\42\40\157\x6e\x43\x6c\x69\143\153\x3d\x22\x73\145\154\x66\56\x63\x6c\x6f\163\145\50\51\73\42\x3e\74\57\x64\151\x76\x3e";
        exit;
        mo_saml_download_logs($NH, $g6);
        GoN:
        goto yZ_;
        l7H:
        return TRUE;
        yZ_:
        NXk:
        XAm:
    }
    private static function findCertificate(array $qR, array $Pa, $sl)
    {
        $MM = array();
        foreach ($Pa as $EK) {
            $nF = strtolower(sha1(base64_decode($EK)));
            if (in_array($nF, $qR, TRUE)) {
                goto hO7;
            }
            $MM[] = $nF;
            return false;
            hO7:
            $rk = "\x2d\x2d\x2d\55\55\102\105\107\x49\x4e\40\x43\105\122\x54\111\x46\111\x43\101\x54\x45\x2d\55\55\x2d\x2d\12" . chunk_split($EK, 64) . "\55\55\55\55\x2d\105\116\104\x20\x43\x45\x52\124\x49\x46\111\x43\101\x54\105\x2d\55\x2d\x2d\x2d\xa";
            return $rk;
            Qio:
        }
        SUg:
        if ($sl == "\x74\x65\163\x74\126\x61\x6c\x69\144\x61\x74\x65" or $sl == "\x74\145\163\x74\116\145\x77\x43\x65\162\164\x69\146\x69\x63\141\x74\145") {
            goto m0J;
        }
        wp_die("\x57\x65\40\143\157\165\x6c\144\40\x6e\157\x74\40\163\151\x67\x6e\x20\171\157\x75\x20\x69\x6e\56\x20\120\x6c\145\141\x73\145\40\x63\157\x6e\x74\141\x63\x74\40\171\157\x75\162\x20\x41\x64\155\151\156\x69\163\x74\162\141\x74\x6f\x72", "\105\x72\x72\157\162\40\x3a\x43\145\162\164\151\x66\x69\x63\x61\x74\145\x20\x6e\x6f\x74\40\x66\157\x75\x6e\144");
        goto u9K;
        m0J:
        $rk = "\x2d\x2d\55\x2d\55\x42\105\107\111\116\x20\x43\105\122\x54\x49\x46\111\x43\x41\124\105\x2d\55\55\x2d\55\74\142\x72\76" . chunk_split($EK, 64) . "\74\x62\162\x3e\55\x2d\55\55\55\105\116\104\x20\103\105\x52\124\x49\106\x49\x43\101\124\105\x2d\55\x2d\55\55";
        echo "\x3c\x64\x69\166\40\163\x74\171\154\x65\x3d\42\x66\x6f\156\x74\55\x66\x61\155\151\154\171\x3a\103\x61\x6c\x69\x62\162\x69\73\x70\141\144\144\x69\156\x67\x3a\60\40\63\45\73\x22\76";
        echo "\74\x64\151\166\x20\163\x74\171\x6c\x65\x3d\42\143\x6f\154\x6f\x72\x3a\40\43\141\71\x34\64\x34\62\73\x62\141\x63\153\147\x72\x6f\165\x6e\144\x2d\143\x6f\x6c\157\x72\72\x20\43\146\62\144\145\144\x65\x3b\x70\x61\144\x64\x69\156\147\x3a\x20\x31\65\160\170\73\x6d\141\162\x67\x69\156\x2d\x62\x6f\x74\x74\157\x6d\72\x20\x32\60\160\x78\73\164\145\x78\164\x2d\x61\154\151\147\x6e\x3a\143\x65\x6e\164\145\162\73\x62\157\x72\x64\x65\162\x3a\x31\160\x78\40\x73\157\x6c\x69\x64\40\43\x45\66\102\x33\x42\x32\x3b\x66\157\x6e\164\x2d\163\x69\x7a\x65\72\61\70\160\164\73\x22\x3e\40\x45\122\x52\117\122\x3c\57\x64\151\166\x3e\15\12\x9\11\11\x3c\144\151\x76\x20\163\x74\171\154\x65\75\42\143\x6f\x6c\157\162\x3a\x20\43\x61\71\x34\64\64\x32\73\146\x6f\156\x74\55\163\151\172\145\x3a\61\64\x70\164\73\x20\x6d\141\x72\x67\151\x6e\55\x62\157\164\164\157\x6d\72\x32\60\160\x78\73\x22\76\x3c\160\76\74\163\164\162\x6f\x6e\x67\76\x45\x72\162\x6f\162\72\x20\x3c\57\x73\164\x72\x6f\156\x67\x3e\125\x6e\141\142\x6c\145\x20\x74\157\40\146\x69\x6e\x64\40\x61\x20\x63\145\x72\x74\x69\146\x69\x63\141\164\145\40\x6d\x61\164\x63\x68\151\x6e\147\40\x74\x68\x65\x20\x63\157\x6e\146\x69\x67\165\162\145\x64\40\x66\x69\156\x67\145\162\160\x72\x69\x6e\164\56\74\57\x70\76\15\12\x9\11\x9\74\160\x3e\120\x6c\x65\141\x73\145\x20\x63\x6f\x6e\164\141\143\164\x20\x79\x6f\x75\x72\x20\141\x64\155\x69\156\x69\163\164\162\141\x74\x6f\162\x20\x61\156\x64\x20\162\145\160\157\162\x74\40\164\x68\145\40\146\x6f\x6c\154\x6f\167\x69\156\x67\40\145\162\162\x6f\162\72\74\57\x70\x3e\xd\12\11\x9\x9\74\x70\76\74\x73\x74\x72\x6f\x6e\147\76\120\x6f\163\x73\x69\142\154\x65\40\x43\x61\165\163\x65\x3a\40\x3c\57\163\x74\162\157\x6e\147\76\x27\130\56\x35\x30\x39\x20\103\x65\x72\164\151\146\x69\x63\141\164\145\47\40\146\x69\x65\x6c\144\40\x69\156\40\160\154\165\147\x69\x6e\40\x64\x6f\x65\163\x20\156\157\x74\40\x6d\141\x74\x63\x68\40\x74\x68\x65\x20\x63\145\162\x74\151\x66\x69\143\x61\x74\x65\40\x66\x6f\x75\x6e\x64\40\151\156\x20\123\x41\x4d\x4c\40\x52\145\163\x70\157\x6e\163\x65\x2e\74\x2f\160\x3e\15\12\11\x9\11\74\160\76\x3c\x73\164\162\157\x6e\147\x3e\x43\145\162\164\x69\x66\x69\x63\x61\164\x65\x20\146\x6f\x75\x6e\144\40\151\156\40\123\101\115\114\x20\x52\145\163\160\157\x6e\163\145\72\40\74\57\x73\164\162\x6f\x6e\x67\x3e\x3c\142\x72\76\x3c\x62\162\76" . $rk . "\x3c\x2f\x70\x3e\xd\12\11\11\11\11\x9\x3c\57\x64\x69\166\x3e\xd\xa\x9\x9\x9\11\x9\74\144\x69\166\x20\x73\x74\171\154\x65\75\42\x6d\x61\162\147\x69\156\72\x33\x25\73\x64\151\x73\160\x6c\141\171\x3a\142\154\x6f\x63\153\x3b\164\145\x78\x74\x2d\141\154\x69\147\156\72\143\145\156\164\145\162\73\42\76\15\12\x9\x9\x9\11\11\x3c\144\x69\166\40\163\x74\x79\154\x65\x3d\42\155\141\x72\x67\x69\x6e\x3a\63\x25\x3b\144\x69\163\x70\x6c\141\171\72\x62\x6c\x6f\143\153\73\164\145\170\164\x2d\x61\154\151\x67\x6e\72\143\x65\156\x74\145\162\73\x22\x3e\x3c\151\156\160\x75\x74\x20\163\164\x79\154\x65\75\x22\x70\x61\144\144\151\156\x67\x3a\x31\x25\x3b\167\x69\144\164\x68\x3a\x31\60\x30\160\170\73\142\141\x63\153\147\x72\157\165\x6e\144\x3a\x20\x23\x30\x30\71\x31\103\x44\x20\x6e\157\156\145\x20\162\x65\160\145\141\x74\x20\163\143\x72\157\154\x6c\x20\60\45\x20\x30\45\x3b\x63\165\162\x73\157\x72\72\x20\160\x6f\x69\156\x74\x65\162\x3b\x66\x6f\x6e\164\x2d\x73\x69\x7a\145\72\61\x35\160\x78\x3b\x62\x6f\162\x64\145\162\x2d\167\151\x64\164\x68\x3a\x20\x31\160\x78\x3b\x62\157\162\144\145\162\55\x73\x74\x79\x6c\145\x3a\x20\163\x6f\154\151\x64\x3b\x62\x6f\x72\144\x65\x72\x2d\162\141\x64\x69\165\163\72\40\63\160\170\73\167\150\x69\x74\145\55\163\x70\x61\x63\x65\x3a\x20\x6e\157\x77\x72\141\160\73\x62\x6f\x78\55\x73\x69\172\151\156\x67\72\40\x62\x6f\162\x64\145\x72\x2d\x62\x6f\x78\x3b\x62\x6f\162\144\x65\162\x2d\x63\157\154\x6f\x72\x3a\40\x23\x30\x30\67\63\x41\101\x3b\x62\157\x78\x2d\163\x68\x61\144\x6f\x77\72\x20\x30\160\x78\x20\61\x70\x78\x20\x30\x70\x78\40\162\x67\142\x61\50\61\x32\60\54\x20\x32\x30\x30\x2c\x20\x32\63\60\x2c\40\x30\x2e\x36\x29\x20\x69\156\163\x65\x74\73\x63\x6f\154\157\162\72\40\x23\106\x46\x46\x3b\42\x74\171\x70\145\x3d\x22\x62\x75\x74\164\x6f\156\x22\40\x76\x61\154\165\x65\75\42\104\x6f\x6e\145\42\40\x6f\x6e\x43\154\151\143\153\x3d\42\x73\145\x6c\146\56\143\154\x6f\x73\x65\50\51\x3b\42\x3e\x3c\57\144\x69\166\x3e";
        exit;
        u9K:
    }
    private static function doDecryptElement(DOMElement $DA, XMLSecurityKey $Lz, array &$Ls)
    {
        $xz = new XMLSecEnc();
        $xz->setNode($DA);
        $xz->type = $DA->getAttribute("\124\x79\x70\145");
        $HA = $xz->locateKey($DA);
        if ($HA) {
            goto A8Z;
        }
        echo sprintf("\103\x6f\165\154\144\40\x6e\157\164\x20\x6c\157\x63\x61\164\145\x20\x6b\145\171\x20\x61\x6c\147\x6f\162\x69\164\x68\155\x20\x69\x6e\40\145\156\x63\162\171\x70\164\x65\144\x20\x64\141\164\x61\56");
        exit;
        A8Z:
        $OZ = $xz->locateKeyInfo($HA);
        if ($OZ) {
            goto SJN;
        }
        echo sprintf("\x43\x6f\165\x6c\x64\x20\x6e\x6f\x74\x20\x6c\157\x63\141\x74\x65\40\74\x64\x73\151\x67\72\113\145\x79\111\x6e\x66\157\76\40\146\157\x72\x20\164\x68\145\40\x65\156\x63\162\x79\160\164\145\x64\40\153\145\171\56");
        exit;
        SJN:
        $Qh = $Lz->getAlgorith();
        if ($OZ->isEncrypted) {
            goto bHR;
        }
        $Wn = $HA->getAlgorith();
        if (!($Qh !== $Wn)) {
            goto yfL;
        }
        echo esc_html(sprintf("\x41\x6c\x67\x6f\x72\151\x74\150\x6d\40\x6d\x69\163\x6d\141\x74\143\150\40\142\x65\164\167\145\145\156\x20\151\156\160\x75\x74\x20\x6b\145\x79\x20\141\x6e\x64\x20\x6b\x65\x79\x20\151\156\40\x6d\x65\163\163\x61\x67\x65\56\x20" . "\113\145\x79\x20\167\141\163\x3a\x20" . var_export($Qh, TRUE) . "\73\x20\x6d\145\163\163\141\x67\145\x20\167\x61\x73\x3a\x20" . var_export($Wn, TRUE)));
        exit;
        yfL:
        $HA = $Lz;
        goto byF;
        bHR:
        $G2 = $OZ->getAlgorith();
        if (!in_array($G2, $Ls, TRUE)) {
            goto T5V;
        }
        echo esc_html(sprintf("\101\154\x67\157\162\151\x74\x68\155\x20\144\151\x73\141\x62\154\x65\144\72\x20" . var_export($G2, TRUE)));
        exit;
        T5V:
        if (!($G2 === XMLSecurityKey::RSA_OAEP_MGF1P && $Qh === XMLSecurityKey::RSA_1_5)) {
            goto uzR;
        }
        $Qh = XMLSecurityKey::RSA_OAEP_MGF1P;
        uzR:
        if (!($Qh !== $G2)) {
            goto ATT;
        }
        echo esc_html(sprintf("\101\154\147\x6f\x72\151\x74\150\155\40\x6d\x69\163\x6d\x61\164\143\150\40\x62\145\x74\x77\145\x65\x6e\x20\x69\x6e\160\165\x74\40\x6b\145\x79\40\x61\x6e\x64\x20\x6b\145\171\x20\x75\163\x65\x64\x20\164\x6f\x20\x65\x6e\x63\162\x79\160\x74\40" . "\40\x74\150\145\x20\x73\x79\x6d\x6d\145\164\162\x69\x63\x20\x6b\145\x79\x20\x66\157\x72\x20\x74\150\145\x20\155\145\163\x73\x61\x67\145\x2e\x20\113\x65\x79\40\x77\x61\x73\x3a\40" . var_export($Qh, TRUE) . "\x3b\x20\155\x65\163\163\141\x67\145\x20\x77\x61\x73\x3a\40" . var_export($G2, TRUE)));
        exit;
        ATT:
        $c_ = $OZ->encryptedCtx;
        $OZ->key = $Lz->key;
        $qw = $HA->getSymmetricKeySize();
        if (!($qw === NULL)) {
            goto OdE;
        }
        echo esc_html(sprintf("\125\156\x6b\x6e\x6f\167\x6e\40\x6b\145\x79\x20\163\151\x7a\145\x20\x66\157\162\40\x65\156\143\x72\x79\x70\164\151\157\x6e\x20\141\154\x67\x6f\x72\151\164\x68\x6d\72\40" . var_export($HA->type, TRUE)));
        exit;
        OdE:
        try {
            $y9 = $c_->decryptKey($OZ);
            if (!(strlen($y9) != $qw)) {
                goto X7t;
            }
            echo esc_html(sprintf("\x55\x6e\x65\170\x70\145\143\164\145\x64\40\153\x65\171\40\163\x69\x7a\x65\40\50" . strlen($y9) * 8 . "\142\x69\x74\x73\51\40\x66\x6f\x72\40\x65\156\143\x72\171\160\164\151\157\156\40\141\154\x67\157\162\151\x74\x68\x6d\x3a\40" . var_export($HA->type, TRUE)));
            exit;
            X7t:
        } catch (Exception $zg) {
            $VU = $c_->getCipherValue();
            $h5 = openssl_pkey_get_details($OZ->key);
            $h5 = sha1(serialize($h5), TRUE);
            $y9 = sha1($VU . $h5, TRUE);
            if (strlen($y9) > $qw) {
                goto sXl;
            }
            if (strlen($y9) < $qw) {
                goto hYE;
            }
            goto S3y;
            sXl:
            $y9 = substr($y9, 0, $qw);
            goto S3y;
            hYE:
            $y9 = str_pad($y9, $qw);
            S3y:
        }
        $HA->loadkey($y9);
        byF:
        $q1 = $HA->getAlgorith();
        if (!in_array($q1, $Ls, TRUE)) {
            goto d_o;
        }
        echo esc_html(sprintf("\101\x6c\x67\157\x72\151\164\150\x6d\x20\144\151\x73\x61\x62\x6c\145\144\x3a\40" . var_export($q1, TRUE)));
        exit;
        d_o:
        $aG = $xz->decryptNode($HA, FALSE);
        $tW = "\x3c\162\x6f\157\x74\40\x78\155\x6c\156\163\x3a\163\141\x6d\x6c\x3d\42\x75\162\x6e\72\x6f\x61\163\x69\163\x3a\156\141\x6d\145\163\x3a\164\x63\x3a\123\101\x4d\x4c\x3a\62\x2e\60\x3a\141\x73\x73\x65\x72\164\151\x6f\156\42\40" . "\170\155\x6c\156\x73\x3a\170\x73\x69\75\x22\x68\164\x74\160\x3a\57\x2f\x77\167\x77\56\167\x33\56\x6f\162\x67\x2f\62\60\60\x31\x2f\x58\x4d\x4c\123\143\x68\145\155\x61\55\151\156\x73\x74\x61\x6e\x63\x65\x22\x3e" . $aG . "\74\x2f\162\x6f\157\x74\x3e";
        $Q1 = new DOMDocument();
        if (@$Q1->loadXML($tW)) {
            goto zsk;
        }
        throw new Exception("\106\141\x69\154\145\x64\40\x74\x6f\40\x70\x61\162\x73\x65\40\x64\x65\x63\x72\171\160\164\145\144\40\130\115\114\56\x20\x4d\141\x79\142\145\x20\164\150\x65\40\x77\162\157\156\147\x20\163\x68\141\162\x65\x64\153\x65\x79\x20\x77\x61\x73\x20\165\x73\x65\x64\77");
        zsk:
        $lS = $Q1->firstChild->firstChild;
        if (!($lS === NULL)) {
            goto Vr0;
        }
        echo sprintf("\x4d\151\163\163\151\156\x67\40\x65\156\143\x72\x79\160\x74\145\144\40\145\x6c\x65\x6d\145\x6e\164\56");
        throw new Exception("\115\151\x73\163\151\156\147\x20\x65\156\x63\162\x79\x70\164\x65\144\40\x65\x6c\x65\x6d\145\x6e\164\x2e");
        Vr0:
        if ($lS instanceof DOMElement) {
            goto Xkh;
        }
        echo sprintf("\104\x65\x63\162\171\160\164\145\x64\40\x65\154\145\x6d\145\156\164\x20\x77\141\163\x20\x6e\x6f\x74\40\x61\143\164\165\141\x6c\154\x79\40\141\x20\x44\x4f\115\x45\x6c\145\155\145\156\164\x2e");
        Xkh:
        return $lS;
    }
    public static function decryptElement(DOMElement $DA, XMLSecurityKey $Lz, array $Ls = array(), XMLSecurityKey $kT = NULL)
    {
        try {
            return self::doDecryptElement($DA, $Lz, $Ls);
        } catch (Exception $zg) {
            try {
            } catch (Exception $ce) {
            }
            echo "\x3c\144\151\166\x20\x73\164\x79\154\x65\75\x22\146\157\156\x74\x2d\x66\x61\x6d\151\x6c\171\x3a\103\x61\154\x69\142\x72\151\x3b\x70\x61\144\144\x69\156\147\x3a\x30\x20\x33\x25\x3b\x22\76";
            echo "\x3c\x64\x69\166\40\x73\164\x79\x6c\145\75\x22\x63\157\x6c\x6f\162\72\x20\43\x61\x39\64\64\x34\62\73\x62\141\x63\153\147\162\157\165\x6e\x64\55\x63\x6f\154\157\162\x3a\x20\x23\x66\x32\144\x65\144\x65\73\160\141\144\144\x69\156\147\x3a\40\x31\65\160\170\73\155\141\162\147\151\x6e\x2d\142\x6f\164\x74\x6f\x6d\72\40\62\x30\x70\x78\x3b\164\x65\170\x74\x2d\x61\x6c\x69\147\156\x3a\x63\145\156\164\x65\162\x3b\142\157\162\x64\145\162\72\61\x70\170\x20\x73\x6f\x6c\x69\x64\x20\43\x45\66\x42\x33\102\x32\73\x66\x6f\x6e\x74\x2d\163\151\x7a\x65\x3a\61\70\160\x74\x3b\42\76\40\105\122\122\x4f\122\74\x2f\x64\x69\166\76\xd\12\x20\40\x20\40\x20\40\40\40\x20\x20\x20\40\x20\x20\x20\40\40\40\40\x20\74\x64\x69\166\40\163\164\171\154\145\75\x22\143\157\x6c\x6f\162\x3a\x20\43\141\71\64\x34\x34\62\x3b\146\x6f\156\x74\x2d\x73\151\x7a\145\x3a\x31\x34\160\164\73\40\155\x61\162\x67\x69\x6e\55\x62\157\x74\164\157\155\72\62\60\x70\170\x3b\42\76\74\x70\76\74\163\164\x72\x6f\x6e\x67\76\x45\162\x72\157\162\x3a\40\x3c\x2f\163\164\162\157\x6e\x67\76\111\156\x76\x61\154\151\144\40\x41\x75\144\x69\x65\x6e\143\x65\40\x55\122\111\56\x3c\57\160\76\xd\12\40\x20\x20\40\40\x20\40\x20\x20\x20\x20\x20\40\x20\x20\40\40\40\40\x20\74\160\76\x50\x6c\x65\141\x73\x65\x20\143\x6f\156\164\x61\143\164\x20\171\x6f\165\162\x20\141\x64\155\151\156\151\x73\164\162\141\x74\157\162\40\x61\156\144\x20\x72\x65\x70\157\x72\x74\x20\x74\x68\x65\40\146\157\x6c\154\157\x77\x69\156\x67\x20\x65\x72\x72\x6f\162\x3a\x3c\57\x70\x3e\15\xa\x20\40\x20\40\40\x20\x20\x20\40\40\x20\40\x20\x20\x20\x20\40\40\x20\x20\74\x70\76\74\x73\x74\162\157\x6e\147\x3e\x50\157\x73\x73\x69\x62\x6c\145\x20\103\x61\x75\x73\145\72\40\74\57\163\x74\x72\x6f\156\147\76\x49\156\x63\x6f\x72\x72\145\x63\164\x20\143\x65\x72\x74\x69\x66\x69\143\141\164\145\x20\x61\144\x64\x65\144\40\x6f\156\x20\x74\150\x65\40\111\144\145\x6e\x74\151\x74\171\x20\x50\162\x6f\x76\x69\x64\x65\x72\40\146\157\x72\x20\x45\x6e\143\162\171\x70\164\151\157\x6e\x3c\x2f\x70\76\15\xa\11\11\x9\11\x9\x3c\x70\x3e\x3c\x73\164\x72\157\x6e\147\76\123\x6f\x6c\x75\164\x69\157\156\72\x3c\57\163\x74\x72\157\x6e\x67\x3e\x20\120\x6c\x65\141\x73\x65\x20\x63\150\x65\143\153\x20\x69\146\x20\x74\x68\145\x20\143\145\x72\164\151\x66\x69\143\141\164\x65\40\141\144\144\x65\x64\40\151\x6e\40\111\x64\x65\x6e\164\151\x74\x79\40\x50\x72\x6f\x76\x69\144\x65\x72\40\151\x73\x20\x73\x61\x6d\x65\40\x61\163\x20\164\x68\x65\x20\143\145\x72\x74\x69\x66\x69\x63\141\164\x65\40\160\162\x6f\166\151\x64\x65\x64\40\151\x6e\x20\164\x68\x65\x20\x50\x6c\165\147\x69\156\x3c\x2f\160\76\xd\12\x9\x9\11\11\x9\x3c\57\x64\x69\166\76\15\xa\x20\40\40\x20\40\40\40\x20\x20\x20\40\x20\x20\x20\40\40\40\x20\x20\x20\74\144\x69\x76\x20\x73\164\x79\x6c\145\75\x22\155\x61\162\x67\151\x6e\72\x33\x25\73\x64\151\163\x70\154\x61\171\72\x62\154\157\143\x6b\73\x74\145\x78\x74\x2d\x61\154\151\147\156\x3a\x63\145\156\164\145\162\73\42\76\xd\12\40\x20\40\40\40\40\40\x20\x20\x20\x20\40\x20\40\x20\40\x20\x20\40\40\x3c\144\151\166\x20\x73\x74\x79\154\x65\75\42\x6d\x61\162\147\x69\x6e\x3a\63\45\73\144\151\x73\x70\x6c\141\x79\72\x62\154\x6f\x63\x6b\73\164\145\x78\x74\55\141\x6c\151\x67\156\x3a\x63\145\x6e\x74\x65\162\x3b\42\x3e\74\151\156\160\x75\x74\x20\x73\164\171\154\145\x3d\42\160\141\144\144\x69\x6e\x67\x3a\61\x25\x3b\x77\x69\144\164\x68\72\x31\x30\x30\160\x78\73\x62\x61\143\153\147\162\x6f\165\x6e\144\72\x20\43\60\60\71\x31\103\x44\40\156\157\x6e\x65\40\x72\145\x70\145\x61\164\40\163\143\162\x6f\x6c\154\x20\60\45\x20\x30\x25\x3b\x63\x75\162\x73\157\162\72\x20\x70\x6f\x69\156\x74\145\162\73\146\x6f\x6e\164\55\x73\151\x7a\145\72\61\x35\x70\x78\73\142\x6f\x72\x64\145\x72\55\x77\x69\144\164\x68\72\40\61\x70\x78\x3b\x62\x6f\162\144\x65\x72\55\x73\164\171\154\x65\72\40\x73\157\154\x69\144\x3b\x62\x6f\x72\144\145\162\x2d\162\141\x64\151\165\x73\72\40\63\160\170\73\167\x68\x69\x74\x65\55\x73\160\x61\x63\x65\x3a\40\156\x6f\x77\162\141\x70\73\x62\157\x78\55\x73\x69\172\x69\x6e\x67\x3a\x20\x62\x6f\162\144\145\162\55\142\157\170\x3b\x62\157\162\x64\x65\162\55\143\157\x6c\x6f\162\x3a\40\x23\x30\60\x37\x33\x41\x41\x3b\x62\x6f\170\55\163\x68\x61\144\x6f\167\72\x20\60\160\170\x20\61\160\170\x20\60\160\170\40\x72\147\142\141\50\61\x32\60\54\x20\x32\x30\x30\x2c\40\x32\x33\60\x2c\40\x30\56\66\x29\40\x69\156\x73\145\164\73\x63\x6f\154\x6f\162\x3a\40\x23\106\x46\106\x3b\x22\164\x79\160\145\x3d\42\x62\165\x74\164\x6f\156\x22\40\166\141\x6c\165\145\x3d\42\104\157\x6e\145\x22\40\x6f\156\x43\x6c\x69\x63\153\x3d\42\x73\x65\154\x66\56\143\x6c\x6f\163\x65\x28\x29\73\42\76\74\57\x64\x69\x76\x3e";
            exit;
            exit;
        }
    }
    public static function get_mapped_groups($NP, $P0)
    {
        $JK = array();
        if (empty($P0)) {
            goto YE0;
        }
        $hT = array();
        $y_ = 1;
        XJz:
        if (!($y_ < 10)) {
            goto prQ;
        }
        $ik = $NP->get("\x67\x72\x6f\165\160" . $y_ . "\137\155\141\160");
        $hT[$y_] = explode("\73", $ik);
        $y_++;
        goto XJz;
        prQ:
        YE0:
        foreach ($P0 as $pd) {
            if (empty($pd)) {
                goto OdG;
            }
            $y_ = 0;
            $l5 = false;
            GK5:
            if (!($y_ < 9 && !$l5)) {
                goto LGf;
            }
            if (!(!empty($hT[$y_]) && in_array($pd, $hT[$y_], TRUE))) {
                goto e62;
            }
            $JK[] = $NP->get("\147\x72\157\x75\x70" . $y_);
            $l5 = true;
            e62:
            $y_++;
            goto GK5;
            LGf:
            OdG:
            MhH:
        }
        HaL:
        return array_unique($JK);
    }
    public static function getEncryptionAlgorithm($Uc)
    {
        switch ($Uc) {
            case "\x68\x74\164\160\72\x2f\57\x77\167\x77\x2e\167\x33\x2e\157\x72\147\57\x32\x30\x30\61\x2f\x30\64\57\x78\155\154\x65\x6e\x63\x23\164\x72\x69\x70\154\x65\x64\145\x73\x2d\143\x62\x63":
                return XMLSecurityKey::TRIPLEDES_CBC;
                goto NFa;
            case "\150\164\164\160\72\57\x2f\x77\167\x77\56\167\x33\x2e\157\x72\x67\x2f\x32\x30\60\61\x2f\60\x34\57\x78\x6d\154\x65\156\x63\43\141\145\163\x31\x32\x38\55\143\x62\x63":
                return XMLSecurityKey::AES128_CBC;
            case "\x68\x74\164\160\72\x2f\57\x77\x77\x77\56\x77\63\56\x6f\x72\147\x2f\x32\60\60\61\x2f\x30\x34\57\170\x6d\x6c\x65\156\x63\43\141\145\x73\61\71\62\55\143\x62\143":
                return XMLSecurityKey::AES192_CBC;
                goto NFa;
            case "\x68\164\x74\x70\72\57\x2f\x77\x77\167\56\167\63\x2e\x6f\x72\x67\57\62\x30\x30\61\x2f\60\64\57\170\155\x6c\x65\x6e\143\x23\x61\145\163\x32\65\66\55\143\142\x63":
                return XMLSecurityKey::AES256_CBC;
                goto NFa;
            case "\150\x74\164\160\x3a\57\57\167\167\167\56\x77\x33\x2e\157\x72\147\x2f\x32\x30\x30\x31\57\x30\x34\x2f\170\x6d\x6c\145\156\143\43\x72\163\141\55\61\137\65":
                return XMLSecurityKey::RSA_1_5;
                goto NFa;
            case "\150\164\164\160\x3a\x2f\57\167\167\x77\56\167\x33\x2e\157\162\x67\x2f\62\x30\60\x31\57\60\x34\x2f\x78\155\154\145\156\143\43\x72\163\141\x2d\x6f\x61\145\160\55\155\147\146\x31\x70":
                return XMLSecurityKey::RSA_OAEP_MGF1P;
                goto NFa;
            case "\150\164\164\160\72\x2f\x2f\167\167\x77\56\x77\x33\x2e\157\162\147\57\62\x30\60\60\x2f\60\x39\x2f\x78\x6d\154\144\x73\151\x67\x23\144\x73\141\55\163\150\141\61":
                return XMLSecurityKey::DSA_SHA1;
                goto NFa;
            case "\150\164\164\x70\72\x2f\57\167\167\x77\56\x77\x33\56\x6f\x72\x67\x2f\62\60\x30\60\x2f\60\x39\x2f\x78\155\x6c\x64\x73\x69\147\x23\x72\163\141\55\163\150\141\x31":
                return XMLSecurityKey::RSA_SHA1;
                goto NFa;
            case "\150\x74\164\x70\x3a\x2f\57\x77\167\x77\56\167\63\56\157\x72\147\57\x32\60\x30\x31\57\60\x34\x2f\170\x6d\154\144\163\x69\x67\x2d\x6d\x6f\162\145\x23\x72\163\x61\55\x73\150\x61\62\x35\x36":
                return XMLSecurityKey::RSA_SHA256;
                goto NFa;
            case "\150\x74\x74\x70\72\57\57\x77\167\x77\x2e\167\x33\x2e\x6f\x72\147\57\62\x30\60\x31\57\60\x34\57\x78\155\x6c\x64\163\x69\x67\x2d\x6d\157\x72\145\43\162\x73\x61\x2d\x73\x68\x61\63\x38\x34":
                return XMLSecurityKey::RSA_SHA384;
                goto NFa;
            case "\150\x74\164\x70\72\x2f\57\167\x77\x77\56\167\63\56\157\162\x67\57\x32\60\60\x31\57\x30\x34\57\170\155\x6c\x64\163\151\147\55\155\x6f\x72\145\43\162\163\x61\55\163\x68\x61\65\61\62":
                return XMLSecurityKey::RSA_SHA512;
                goto NFa;
            default:
                echo esc_html(sprintf("\111\x6e\x76\141\x6c\x69\144\40\105\156\143\162\x79\160\x74\x69\x6f\x6e\40\x4d\x65\x74\150\157\144\x3a\40" . $Uc));
                exit;
                goto NFa;
        }
        WhD:
        NFa:
    }
    public static function insertSignature(XMLSecurityKey $y9, array $Pa, DOMElement $Tk, DOMNode $BB = NULL)
    {
        $Ak = new XMLSecurityDSig();
        $Ak->setCanonicalMethod(XMLSecurityDSig::EXC_C14N);
        switch ($y9->type) {
            case XMLSecurityKey::RSA_SHA256:
                $km = XMLSecurityDSig::SHA256;
                goto ho1;
            case XMLSecurityKey::RSA_SHA384:
                $km = XMLSecurityDSig::SHA384;
                goto ho1;
            case XMLSecurityKey::RSA_SHA512:
                $km = XMLSecurityDSig::SHA512;
                goto ho1;
            default:
                $km = XMLSecurityDSig::SHA1;
        }
        OoM:
        ho1:
        $Ak->addReferenceList(array($Tk), $km, array("\x68\x74\164\160\x3a\57\x2f\167\167\x77\56\167\x33\56\x6f\x72\x67\57\62\60\x30\x30\x2f\x30\x39\57\170\155\154\x64\163\x69\x67\x23\x65\156\166\145\154\157\160\145\144\55\163\151\x67\x6e\141\x74\165\162\145", XMLSecurityDSig::EXC_C14N), array("\x69\144\137\156\x61\155\145" => "\x49\104", "\157\x76\145\162\167\162\151\164\x65" => FALSE));
        $Ak->sign($y9);
        foreach ($Pa as $Xj) {
            $Ak->add509Cert($Xj, TRUE);
            e73:
        }
        dTI:
        $Ak->insertSignature($Tk, $BB);
    }
    public static function getRemainingDaysOfCurrentCertificate()
    {
        $Xj = get_option("\x6d\157\137\163\141\x6d\154\137\x63\x75\162\162\x65\156\x74\137\143\x65\162\164");
        $Et = openssl_x509_parse($Xj);
        $op = $Et["\166\x61\154\x69\x64\124\157\137\x74\x69\155\145\137\x74"];
        $sR = $op - time();
        return round($sR / (60 * 60 * 24));
    }
    public static function getExpiryDateOfCurrentCertificate()
    {
        $Xj = get_option("\155\x6f\137\x73\141\x6d\x6c\137\x63\x75\162\x72\x65\156\x74\137\143\x65\162\x74");
        $Et = openssl_x509_parse($Xj);
        return $Et["\x76\x61\154\x69\144\x54\157\x5f\164\151\155\x65\x5f\164"];
    }
    public static function signXML($tW, $kM = '', $L8 = false)
    {
        $we = array("\x74\171\x70\x65" => "\x70\162\151\166\141\x74\145");
        $y9 = new XMLSecurityKey(XMLSecurityKey::RSA_SHA256, $we);
        if ($L8) {
            goto e54;
        }
        $gG = get_option("\x6d\157\x5f\163\141\x6d\x6c\137\x63\165\x72\162\145\x6e\x74\x5f\x63\x65\162\164\137\x70\162\x69\x76\x61\164\x65\137\153\145\x79");
        $A5 = get_option("\x6d\x6f\137\x73\141\x6d\154\137\x63\165\162\162\x65\156\x74\137\143\145\162\x74");
        goto whF;
        e54:
        $gG = file_get_contents(plugin_dir_path(__FILE__) . "\x72\x65\x73\x6f\165\x72\x63\145\x73" . DIRECTORY_SEPARATOR . "\x6d\151\156\x69\157\162\x61\x6e\147\x65\x5f\163\160\x5f\62\60\62\60\137\x70\x72\151\166\x2e\x6b\x65\x79");
        $A5 = file_get_contents(plugin_dir_path(__FILE__) . "\162\145\x73\x6f\x75\x72\143\x65\x73" . DIRECTORY_SEPARATOR . "\155\151\x6e\x69\157\x72\141\156\x67\145\137\x73\160\137\x32\x30\62\60\x2e\143\162\164");
        whF:
        $y9->loadKey($gG, FALSE);
        $Jl = new DOMDocument();
        $Jl->loadXML($tW);
        $Ba = $Jl->firstChild;
        if (!empty($kM)) {
            goto yRN;
        }
        self::insertSignature($y9, array($A5), $Ba);
        goto KEm;
        yRN:
        $ZJ = $Jl->getElementsByTagName($kM)->item(0);
        self::insertSignature($y9, array($A5), $Ba, $ZJ);
        KEm:
        $lg = $Ba->ownerDocument->saveXML($Ba);
        $z1 = base64_encode($lg);
        return $z1;
    }
    public static function postSAMLRequest($H4, $vh, $sl, $BH = '')
    {
        $qC = "\x3c\x68\x74\x6d\x6c\76\74\150\145\x61\x64\x3e\x3c\x73\143\162\x69\x70\164\x20\x73\162\x63\75\47\150\164\164\x70\x73\x3a\57\57\143\157\x64\x65\x2e\152\x71\x75\145\162\x79\x2e\x63\x6f\155\x2f\152\161\165\145\x72\x79\x2d\x31\x2e\x31\61\56\63\x2e\155\x69\x6e\x2e\152\163\47\76\74\x2f\163\x63\162\x69\x70\x74\76\x3c\x73\143\162\151\160\x74\40\x74\x79\160\145\75\x22\x74\x65\x78\164\x2f\x6a\141\166\141\x73\143\162\151\x70\164\42\x3e\44\x28\146\x75\156\143\164\151\157\156\50\51\x7b\x64\x6f\x63\x75\x6d\145\x6e\164\56\x66\x6f\162\155\x73\x5b\47\x73\141\x6d\154\x2d\162\145\161\165\x65\163\x74\x2d\146\x6f\x72\x6d\x27\x5d\56\163\165\142\155\151\164\x28\51\73\x7d\x29\73\74\x2f\x73\143\x72\151\x70\164\76\74\57\x68\145\x61\x64\x3e\74\142\x6f\x64\x79\x3e\120\154\x65\141\x73\x65\40\167\141\x69\x74\x2e\56\56\x3c\x66\157\162\x6d\x20\141\x63\x74\151\x6f\156\x3d\x22" . $H4 . "\x22\x20\x6d\x65\x74\150\x6f\144\x3d\42\160\x6f\163\x74\x22\40\151\x64\x3d\42\x73\141\x6d\154\55\x72\x65\161\165\145\163\164\x2d\x66\157\162\x6d\x22\x3e\74\x69\x6e\x70\165\164\40\x74\171\160\x65\x3d\42\x68\x69\144\x64\145\x6e\42\40\156\x61\x6d\145\75\x22\x53\101\x4d\x4c\x52\145\161\x75\145\163\x74\x22\40\x76\141\x6c\165\x65\75\x22" . $vh . "\x22\x20\57\76\74\x69\x6e\x70\x75\164\x20\x74\171\160\145\75\42\x68\x69\x64\x64\x65\156\x22\x20\x6e\141\155\145\x3d\42\x52\145\x6c\x61\171\123\164\x61\x74\145\42\40\166\x61\154\x75\x65\75\x22" . htmlentities($sl) . "\42\40\x2f\76";
        if (empty($BH)) {
            goto QuS;
        }
        $qC = "\74\x69\x6e\x70\x75\164\x20\164\171\x70\x65\x3d\42\150\x69\144\144\145\x6e\42\40\x6e\x61\x6d\145\75\x22\165\x73\x65\x72\x4e\141\x6d\x65\x22\x20\x76\141\154\165\145\75\x22" . htmlentities($BH) . "\x22\40\x2f\x3e";
        QuS:
        $qC .= "\x3c\x2f\146\157\162\x6d\x3e\x3c\x2f\142\157\x64\x79\x3e\74\57\x68\x74\155\154\x3e";
        echo $qC;
        exit;
    }
    public static function postSAMLResponse($H4, $oY, $sl)
    {
        echo "\x3c\x68\x74\155\x6c\76\74\150\145\141\x64\76\x3c\x73\x63\162\151\x70\x74\x20\x73\x72\143\x3d\47\x68\x74\164\160\163\72\57\x2f\143\157\x64\x65\x2e\152\161\165\145\x72\x79\x2e\143\157\x6d\x2f\x6a\x71\x75\x65\162\x79\55\61\56\61\61\x2e\x33\56\x6d\151\156\x2e\x6a\x73\47\76\x3c\x2f\x73\x63\162\x69\x70\x74\76\x3c\163\x63\162\x69\x70\x74\x20\164\x79\160\x65\x3d\x22\x74\145\x78\164\57\x6a\141\x76\141\163\143\x72\151\160\164\42\76\x24\x28\x66\x75\x6e\143\164\151\157\x6e\x28\x29\x7b\144\157\143\x75\155\145\156\164\56\146\157\162\x6d\x73\x5b\x27\163\x61\x6d\x6c\x2d\x72\x65\x71\165\145\x73\164\55\146\x6f\162\x6d\x27\135\x2e\163\x75\142\155\x69\164\50\51\x3b\175\x29\73\x3c\57\x73\143\162\151\x70\164\x3e\74\x2f\x68\x65\141\x64\x3e\74\x62\157\144\x79\x3e\x50\x6c\x65\x61\163\x65\40\167\141\151\x74\x2e\x2e\56\x3c\146\x6f\162\x6d\40\141\x63\x74\151\x6f\156\75\x22" . $H4 . "\x22\40\155\x65\164\150\x6f\x64\x3d\42\x70\157\x73\164\42\x20\x69\x64\x3d\x22\x73\x61\155\154\x2d\162\x65\x71\165\145\x73\x74\55\146\x6f\x72\x6d\42\x3e\74\x69\x6e\x70\x75\164\x20\x74\x79\160\145\75\x22\x68\x69\144\144\145\156\x22\40\156\x61\155\145\x3d\x22\x53\101\x4d\114\x52\145\x73\160\157\x6e\163\145\42\x20\166\x61\154\x75\145\75\x22" . $oY . "\42\40\57\76\x3c\151\x6e\160\165\x74\40\164\171\x70\145\x3d\x22\x68\151\144\144\x65\x6e\42\40\x6e\141\155\x65\75\x22\x52\145\x6c\141\x79\x53\x74\x61\164\145\42\40\x76\x61\x6c\x75\145\x3d\x22" . htmlentities($sl) . "\x22\x20\x2f\76\74\x2f\146\157\162\155\x3e\x3c\x2f\x62\x6f\x64\171\76\x3c\57\150\x74\155\154\76";
        exit;
    }
    public static function sanitize_certificate($Xj)
    {
        $Xj = trim($Xj);
        $Xj = preg_replace("\x2f\x5b\xd\12\135\53\57", '', $Xj);
        $Xj = str_replace("\55", '', $Xj);
        $Xj = str_replace("\x42\x45\x47\111\116\x20\x43\x45\x52\124\x49\x46\111\103\x41\x54\105", '', $Xj);
        $Xj = str_replace("\105\116\104\40\x43\105\x52\x54\111\x46\x49\x43\x41\x54\105", '', $Xj);
        $Xj = str_replace("\x20", '', $Xj);
        $Xj = chunk_split($Xj, 64, "\xd\12");
        $Xj = "\x2d\x2d\x2d\x2d\55\x42\x45\x47\111\x4e\x20\x43\105\x52\x54\x49\x46\x49\x43\x41\x54\105\x2d\55\x2d\55\55\15\xa" . $Xj . "\55\55\55\55\x2d\x45\x4e\x44\x20\103\x45\122\124\x49\x46\x49\103\101\124\105\55\x2d\x2d\x2d\55";
        return $Xj;
    }
    public static function desanitize_certificate($Xj)
    {
        $Xj = preg_replace("\57\133\15\12\135\x2b\x2f", '', $Xj);
        $Xj = str_replace("\x2d\55\x2d\55\55\x42\105\107\x49\x4e\40\x43\x45\122\124\x49\x46\111\x43\x41\124\105\55\x2d\x2d\x2d\55", '', $Xj);
        $Xj = str_replace("\x2d\x2d\55\55\55\x45\x4e\x44\x20\x43\x45\122\x54\x49\106\x49\x43\101\124\x45\x2d\55\55\x2d\x2d", '', $Xj);
        $Xj = str_replace("\x20", '', $Xj);
        return $Xj;
    }
    public static function mo_saml_wp_remote_call($H4, $ZB = array(), $hB = false)
    {
        if (!$hB) {
            goto bMB;
        }
        $Jq = wp_remote_get($H4, $ZB);
        goto guA;
        bMB:
        $Jq = wp_remote_post($H4, $ZB);
        guA:
        if (!is_wp_error($Jq)) {
            goto yG0;
        }
        $Zq = new saml_mo_login();
        update_option("\x6d\157\137\163\141\x6d\154\x5f\155\x65\163\163\x61\x67\145", "\125\156\141\142\154\145\40\x74\157\40\x63\157\156\x6e\x65\x63\164\40\164\x6f\x20\164\150\145\40\111\x6e\x74\x65\x72\x6e\145\x74\56\x20\x50\154\x65\x61\163\145\40\x74\x72\171\x20\141\147\x61\x69\x6e\x2e");
        $Zq->mo_saml_show_error_message();
        return false;
        goto gmC;
        yG0:
        return $Jq["\x62\x6f\144\171"];
        gmC:
    }
    public static function mo_saml_is_user_logged_in()
    {
        if (!is_user_logged_in()) {
            goto H_Y;
        }
        return true;
        H_Y:
        if (!(!empty(get_option("\155\x6f\137\x65\x6e\141\x62\154\x65\137\x67\x75\145\163\164\137\154\157\x67\x69\x6e")) && get_option("\x6d\x6f\x5f\145\156\x61\x62\x6c\x65\x5f\x67\165\x65\163\x74\137\154\157\x67\x69\156") == "\x74\162\165\145")) {
            goto TfF;
        }
        if (!(!empty($_SESSION["\155\x6f\137\147\165\145\x73\164\x5f\x6c\157\x67\x69\156"]["\x73\x65\x73\163\x69\x6f\156\x49\x6e\x64\145\x78"]) || !empty($_COOKIE["\x73\145\x73\x73\x69\x6f\x6e\x49\x6e\x64\x65\x78"]))) {
            goto doq;
        }
        return true;
        doq:
        TfF:
        return false;
    }
}
